{"version":3,"file":"static/js/201.04023a40.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACrCC,QAAS,mCACTC,SAAU,UAGDC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVd,EAAAA,EAAAA,IAAU,sBAADe,OAAuBd,IAAe,OAAzD,OAAyDS,EAAAE,EAAAI,KAA7DL,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SACJN,GAAI,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACd,kBAH+B,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKnBC,EAAiB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAC,EAAAd,EAAA,OAAAH,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACnBd,EAAAA,EAAAA,IAAU,iBAADe,OAAkBd,EAAY,WAAAc,OAAUS,IAAQ,OAAnE,OAAmEC,EAAAC,EAAAV,KAAvEL,EAAIc,EAAJd,KAAIe,EAAAT,OAAA,SACJN,GAAI,wBAAAe,EAAAR,OAAA,GAAAK,EAAA,KACd,gBAH6BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAKjBQ,EAAiB,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAO,IAAAC,EAAArB,EAAA,OAAAH,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACrBd,EAAAA,EAAAA,IAAU,UAADe,OAAWgB,EAAO,KAAAhB,OAAId,IAAe,OAAxD,OAAwD+B,EAAAC,EAAAjB,KAA5DL,EAAIqB,EAAJrB,KAAIsB,EAAAhB,OAAA,SACJN,GAAI,wBAAAsB,EAAAf,OAAA,GAAAY,EAAA,KACd,gBAH6BI,GAAA,OAAAL,EAAAV,MAAA,KAAAC,UAAA,KAKjBe,EAAc,eAAAC,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6B,EAAMN,GAAO,IAAAO,EAAA3B,EAAA,OAAAH,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAClBd,EAAAA,EAAAA,IAAU,UAADe,OAAWgB,EAAO,aAAAhB,OAAYd,IAAe,OAAhE,OAAgEqC,EAAAC,EAAAvB,KAApEL,EAAI2B,EAAJ3B,KAAI4B,EAAAtB,OAAA,SACJN,GAAI,wBAAA4B,EAAArB,OAAA,GAAAmB,EAAA,KACd,gBAH0BG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAC,UAAA,KAKdqB,EAAiB,eAAAC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmC,EAAMZ,GAAO,IAAAa,EAAAjC,EAAA,OAAAH,IAAAA,MAAA,SAAAqC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACrBd,EAAAA,EAAAA,IAAU,UAADe,OAAWgB,EAAO,aAAAhB,OAAYd,IAAe,OAAhE,OAAgE2C,EAAAC,EAAA7B,KAApEL,EAAIiC,EAAJjC,KAAIkC,EAAA5B,OAAA,SACJN,GAAI,wBAAAkC,EAAA3B,OAAA,GAAAyB,EAAA,KACd,gBAH6BG,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,I,+JC1BjB2B,EAAWC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAIpBC,EAAiBH,EAAAA,QAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wPAY3BG,EAAcL,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8FAMxBK,EAAaP,EAAAA,QAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gD,yGCtBvBO,EAAOT,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIjBQ,EAAYV,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yN,4LCHrBS,EAAY,SAAHrD,GAAiB,IAAZsD,EAAKtD,EAALsD,MAElBC,EAAsDD,EAAtDC,MAAOC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,OAE7CC,EAAS,mCAAAnD,OAAsC+C,GAC/CK,GAA4B,GAAfJ,GAAmBK,QAAQ,GACxCC,EAAcJ,EAASA,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,MAAO,GAEzE,OACIC,EAAAA,EAAAA,MAACvB,EAAAA,GAAc,CAAAwB,SAAA,CACZb,GACCc,EAAAA,EAAAA,KAAA,OAAKC,IAAKX,EAAWY,MAAO,IAAKC,OAAQ,IAAKC,IAAG,GAAAjE,OAAK8C,EAAK,cACzDe,EAAAA,EAAAA,KAACrB,EAAAA,GAAU,CAAAoB,SAAC,qBAEhBD,EAAAA,EAAAA,MAACrB,EAAAA,GAAW,CAAAsB,SAAA,EACRC,EAAAA,EAAAA,KAAClB,EAAAA,EAAS,CAAAiB,SAAEd,KACZa,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaR,EAAU,SAC1BS,EAAAA,EAAAA,KAAC7B,EAAAA,GAAQ,CAAA4B,SAAC,cACVC,EAAAA,EAAAA,KAAA,KAAAD,SAAIX,KACJY,EAAAA,EAAAA,KAAC7B,EAAAA,GAAQ,CAAA4B,SAAC,YACVC,EAAAA,EAAAA,KAAA,KAAAD,SAAIN,SAKhB,E,uCCxBMY,GAAajC,EAAAA,EAAAA,SAAOkC,EAAAA,GAAPlC,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kPAgBlBiC,EAAW,SAAH7E,GAAwB,IAAnB8E,EAAE9E,EAAF8E,GAAIT,EAAQrE,EAARqE,SAC1B,OACID,EAAAA,EAAAA,MAACO,EAAU,CAACG,GAAIA,EAAGT,SAAA,EACnBC,EAAAA,EAAAA,KAACS,EAAAA,IAAW,CAACC,KAAK,OACjBX,IAGT,E,UCxBaY,EAAYvC,EAAAA,QAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iGAO1BsC,EAAcxC,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2EAMvBuC,GAAczC,EAAAA,EAAAA,SAAOkC,EAAAA,GAAPlC,CAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gSC8CvC,EArDoB,WAAK,IAADwC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjBhE,GAAWiE,EAAAA,EAAAA,MAAXjE,QACPkE,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0CL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,GAAWC,EAAAA,EAAAA,MAyBjB,OArBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,eAAAxG,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAsG,EAAA,OAAAvG,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFDF,EAAAC,KAAA,EAEhByF,GAAW,GAAM1F,EAAAE,KAAA,GACOc,EAAAA,EAAAA,IAAkBG,GAAS,KAAD,EAC1B,KADlBgF,EAASnG,EAAAI,MACFgG,OACTC,EAAAA,GAAAA,MAAY,gCAGZP,EAAiBK,GACpBnG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsG,GAAAtG,EAAA,SAGDqG,EAAAA,GAAAA,MAAY,sCAAsC,QAGhC,OAHgCrG,EAAAC,KAAA,GAGlDyF,GAAW,GAAO1F,EAAAuG,OAAA,6BAAAvG,EAAAM,OAAA,GAAAT,EAAA,wBAEzB,kBAjBoB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAkBrB0F,GACJ,GAAE,CAAC/E,IACC0E,GAAuD,IAAtCW,OAAOC,KAAKZ,GAAeO,QAI5CtC,EAAAA,EAAAA,MAACa,EAAS,CAAAZ,SAAA,CACL0B,IAAWzB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,KAClB5C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACGC,EAAAA,EAAAA,KAACO,EAAQ,CAACC,GAAwB,QAAtBM,EAAgB,QAAhBC,EAAEgB,EAASY,aAAK,IAAA5B,OAAA,EAAdA,EAAgB6B,YAAI,IAAA9B,EAAAA,EAAI,IAAIf,SAAC,aAC3CC,EAAAA,EAAAA,KAACjB,EAAS,CAACC,MAAO6C,KAClB/B,EAAAA,EAAAA,MAACc,EAAW,CAAAb,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAW,CAACL,GAAG,OAAOmC,MAAO,CAAEC,KAA2B,QAAvB5B,EAAU,OAARe,QAAQ,IAARA,GAAe,QAAPd,EAARc,EAAUY,aAAK,IAAA1B,OAAP,EAARA,EAAiB2B,YAAI,IAAA5B,EAAAA,EAAI,KAAMjB,SAAC,YAE1EC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAW,CAACL,GAAG,UAAUmC,MAAO,CAAEC,KAA2B,QAAvB1B,EAAU,OAARa,QAAQ,IAARA,GAAe,QAAPZ,EAARY,EAAUY,aAAK,IAAAxB,OAAP,EAARA,EAAiByB,YAAI,IAAA1B,EAAAA,EAAI,KAAMnB,SAAC,qBAIrFC,EAAAA,EAAAA,KAAC6C,EAAAA,SAAQ,CAACC,UAAU9C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,IAAG3C,UAC1BC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,SAlBR,IAsBX,C","sources":["Api/api.js","components/MovieCard/MovieCard.styled.js","pages/Home/Home.styled.js","components/MovieCard/MovieCard.js","components/BackLink.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: 'c711c80cfbcd91878c6dbf3d7083e79a',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/week?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};","import styled from \"styled-components\";\n\nexport const Subtitle = styled.h3`\n    font-size: 400;\n    color: #4848a4;\n`\nexport const DetailsWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n\n    @media only screen and (min-width: 768px) {     \n        flex-direction: row;\n        align-items: start;\n        gap: 10px;      \n    }\n`\nexport const InfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    padding: 24px;\n`\nexport const ImgWrapper = styled.div`\n    width: 250px;\n    height: 375px;\n`","import styled from \"styled-components\";\n\nexport const Page = styled.div`\n     padding: 18px 24px;\n`\n\nexport const PageTitle = styled.h1`\n    font-weight: 600;\n    margin-bottom: 18px;\n    text-align :center;    \n    color: #CB852B;\n\n    @media only screen and (min-width: 768px) {\n       font-size: 800;\n       text-align: start;\n    }\n`","import { PageTitle } from \"pages/Home/Home.styled\";\nimport { DetailsWrapper, ImgWrapper, InfoWrapper, Subtitle } from \"./MovieCard.styled\";\n\nexport const MovieCard = ({movie}) => {\n    \n  const {title, poster_path, vote_average, overview, genres} = movie;  \n \n  const posterUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;  \n  const userScore = (vote_average * 10).toFixed(0);\n  const movieGenres = genres ? genres.map(genre => genre.name).join(', '): '';\n\n  return(\n      <DetailsWrapper> \n        {poster_path ?\n          <img src={posterUrl} width={250} height={375} alt={`${title} poster`} /> \n          : <ImgWrapper>Image not found</ImgWrapper>          \n        }\n        <InfoWrapper>\n            <PageTitle>{title}</PageTitle>\n            <p>User Score: {userScore} %</p>\n            <Subtitle>Overview</Subtitle>\n            <p>{overview}</p>\n            <Subtitle>Genres</Subtitle>\n            <p>{movieGenres}</p>\n        </InfoWrapper>\n          \n      </DetailsWrapper>\n  );\n};","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  font-weight: 500;\n  text-decoration: none;\n  text-transform: uppercase;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;  \n  color: #E87946;\n\n  &:hover,\n  &:focus {\n    color: #1a1a8d;\n  }\n`\n\nexport const BackLink = ({to, children}) => {\n    return (\n        <StyledLink to={to}>\n        <HiArrowLeft size=\"24\"/>\n        {children}\n        </StyledLink>\n    );\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.section`\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    padding: 24px;\n\n`\nexport const DetailsList = styled.ul`\n    display: flex;\n    gap: 10px;\n    margin-top: 24px;\n    \n`\nexport const DetailsLink = styled(Link)`    \n    font-size: 18px;\n    font-weight: 500;\n    padding: 6px;\n    border-radius: 6px;\n    text-decoration: none;\n    color: #1a1a8d;\n    transition: color 250 ease-in-out;\n  \n    &:hover,\n    &:focus {\n        color: #fff;\n        background-color: #4848a4;\n  }\n`","import { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useParams} from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport { fetchMovieDetails } from \"Api/api\";\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport { BackLink } from \"components/BackLink\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Container, DetailsLink, DetailsList } from \"./MovieDetails.styled\";\n\nconst MovieDetails =()=>{\nconst {movieId} = useParams();\nconst [loading, setLoading] = useState(false);    \nconst [selectedMovie, setSelectedMovie] = useState({});\nconst location = useLocation();\n\n\n\nuseEffect(()=>{\n    const getMovieDetails = async () => {\n        try{\n            setLoading(true);\n            const movieData = await fetchMovieDetails(movieId);\n            if(movieData.length === 0){\n                toast.error(`Movie not found it's not ok!`);\n            }\n            else{\n                setSelectedMovie(movieData);\n            }\n        }\n        catch (error) {\n            toast.error(`Error while fetching movie details`);\n        }\n        finally{\n            setLoading(false);\n        }\n    }\n    getMovieDetails();\n},[movieId])\nif(!selectedMovie || Object.keys(selectedMovie).length === 0){\n    return null;\n}\nreturn(\n    <Container>\n        {loading && <Loader /> }  \n        {<div>\n            <BackLink to={location.state?.from ?? '/'}>Go back</BackLink>\n            <MovieCard movie={selectedMovie}/>\n            <DetailsList>\n                <li>\n                    <DetailsLink to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>CAST</DetailsLink>\n                </li>\n                <li>\n                    <DetailsLink to=\"reviews\" state={{ from: location?.state?.from ?? '/' }}>REVIEWS</DetailsLink>\n                </li>                \n            </DetailsList>\n        </div>  }          \n        <Suspense fallback={<Loader/>}>\n            <Outlet /> \n        </Suspense>\n    </Container>\n);\n}\nexport default MovieDetails;"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","Subtitle","styled","_templateObject","_taggedTemplateLiteral","DetailsWrapper","_templateObject2","InfoWrapper","_templateObject3","ImgWrapper","_templateObject4","Page","PageTitle","MovieCard","movie","title","poster_path","vote_average","overview","genres","posterUrl","userScore","toFixed","movieGenres","map","genre","name","join","_jsxs","children","_jsx","src","width","height","alt","StyledLink","Link","BackLink","to","HiArrowLeft","size","Container","DetailsList","DetailsLink","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","selectedMovie","setSelectedMovie","location","useLocation","useEffect","getMovieDetails","movieData","length","toast","t0","finish","Object","keys","Loader","state","from","Suspense","fallback","Outlet"],"sourceRoot":""}