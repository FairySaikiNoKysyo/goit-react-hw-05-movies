{"version":3,"file":"static/js/623.7269fe2c.chunk.js","mappings":"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","sources":["Api/api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home/Home.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: 'c711c80cfbcd91878c6dbf3d7083e79a',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/week?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};","import styled from \"styled-components\";\nimport { BsFileImage } from 'react-icons/bs';\n\nexport const ListItem = styled.li`\n  padding: 8px;`\n\nexport const MovieName = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: navy;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline\n  }\n`;\nexport const MovieImg = styled.img`\n  display: block;\n  height: 330px;\n  max-width: 100%;\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n\n  transition: all 200ms ease-in-out;\n`;\nexport const ImageTemplate = styled(BsFileImage)`\n  width: 200px;\n  height: 330px;\n`;\n\n","import { Link, useLocation } from \"react-router-dom\"\nimport { ListItem, MovieName, ImageTemplate, MovieImg } from \"./MovieList.styled\";\n\nexport const MovieList = ({movies}) => {\n    const imgUrl = 'https://image.tmdb.org/t/p/w500/';\n    const location = useLocation();\n    return (\n        \n        <ul>\n            {movies.map(movie => (                \n                <ListItem key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location}}>\n                    {movie.poster_path ?  <MovieImg src={imgUrl.concat(movie.poster_path)}/> : <ImageTemplate/>}\n                       <MovieName>{movie.title ?? movie.original_name}</MovieName> \n                    </Link>\n                </ListItem>\n            ))}\n        </ul>\n    );\n};","import styled from \"styled-components\";\n\nexport const Page = styled.div`\n     padding: 18px 24px;\n`\n\nexport const PageTitle = styled.h1`\n    font-weight: 600;\n    margin-bottom: 18px;\n    text-align :center;    \n    color: #CB852B;\n\n    @media only screen and (min-width: 768px) {\n       font-size: 800;\n       text-align: start;\n    }\n`","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;  \n  align-items: center; \n  flex-wrap: nowrap;\n  gap: 10px;  \n`\n\nexport const Input = styled.input`\n  font-size: 16px;\n  width: 150px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;  \n`\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 8px 18px;\n  color: #0d57aa;\n  background-color: #FFDCCC;\n  border: 1px solid #0d57aa;\n  border-radius: 8px;\n  transition: background-color 250ms ease-in-out, \n    color 250ms ease-in-out; \n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`","import { Button, Form, Input } from \"./SearchForm.styled\";\nimport toast from \"react-hot-toast\";\n\nexport const SearchForm = ({onSubmit}) => {\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault(); \n        const queryValue = evt.target.elements.query.value;\n\n        if(!queryValue){\n            toast.error('Please fill in the search value.', { icon: 'ðŸ‘ˆ' });         \n        } else{\n            onSubmit(queryValue);\n        }        \n        evt.target.reset();\n    };\n      \n    return (\n        <Form onSubmit={handleSubmit}>            \n            <Input \n            type=\"text\" \n            autoComplete=\"off\" \n            autoFocus placeholder=\"Search movie\" \n            name=\"query\"        \n            />\n            <Button type=\"submit\" >Search</Button>\n        </Form>           \n    );\n};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fetchSearchMovies } from 'Api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { Page } from './Home/Home.styled'\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    async function getSearchMovies() {\n      if (query === '') {\n        return;\n      }\n      try {\n        setLoading(true);\n        const { results } = await fetchSearchMovies(query);\n        if (results.length === 0) {\n          toast.error(\n            `Sorry, there are no films matching your search query. Please try again.`\n          );\n        } else {\n          setSearchMovies(results);\n        }\n      } catch (error) {\n        toast.error('Error while fetching films. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getSearchMovies();\n  }, [searchParams]);\n\n  const handleSubmit = (queryValue) => {\n    setSearchParams({ query: queryValue });\n}\n\n  return (\n    <Page>\n      <SearchForm onSubmit={handleSubmit} />\n      {loading && <Loader />}\n      <MovieList movies={searchMovies} />\n    </Page>\n  );\n};\nexport default Movies;\n"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","ListItem","styled","_templateObject","_taggedTemplateLiteral","MovieName","_templateObject2","MovieImg","_templateObject3","ImageTemplate","BsFileImage","_templateObject4","MovieList","movies","location","useLocation","_jsx","children","map","movie","_movie$title","_jsxs","Link","to","id","state","from","poster_path","src","title","original_name","Page","PageTitle","Form","Input","Button","SearchForm","onSubmit","evt","preventDefault","queryValue","target","elements","value","toast","icon","reset","type","autoComplete","autoFocus","placeholder","name","_useState","useState","_useState2","_slicedToArray","searchMovies","setSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","_useState3","_useState4","loading","setLoading","useEffect","_searchParams$get","get","_getSearchMovies","_yield$fetchSearchMov","results","length","t0","finish","getSearchMovies","Loader"],"sourceRoot":""}